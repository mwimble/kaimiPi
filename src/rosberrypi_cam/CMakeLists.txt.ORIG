cmake_minimum_required(VERSION 2.8.3)
project(rosberrypi_cam)
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} /usr/local/lib/cmake/)
SET(FLAGS "-g -ggdb -g3 -Wl,-rpath-link,${PIROOT}/opt/vc/lib -Wl,-rpath-link,${PIROOT}/lib/arm-linux-gnueabihf -Wl,-rpath-link,${PIROOT}/usr/lib/arm-linux-gnueabihf -Wl,-rpath-link,${PIROOT}/usr/local/lib")
find_package(catkin REQUIRED COMPONENTS
  image_transport roscpp cv_bridge camera_info_manager
)
find_package(raspicam REQUIRED cv)
find_package(OpenCV REQUIRED core ocl)
#find_package(Raspicam_CV REQUIRED)
#find_package(OpenCV_OCL REQUIRED)
find_package(Boost REQUIRED COMPONENTS system)

IF (raspicam_FOUND)
MESSAGE(STATUS "raspicam FOUND")
ELSE()
MESSAGE(STATUS "raspicam NOT FOUND")
ENDIF()

IF (OpenCV_FOUND)
MESSAGE(STATUS "OpenCV FOUND")
ELSE()
MESSAGE(STATUS "penCV NOT FOUND")
ENDIF()

IF (raspicam_CV_FOUND)
MESSAGE(STATUS "raspicam_CV FOUND")
ELSE()
MESSAGE(STATUS "raspicam_CV NOT FOUND")
ENDIF()

catkin_package()

add_definitions(-DUSE_VCHIQ_ARM -DVCHI_BULK_ALIGN=1 -DVCHI_BULK_GRANULARITY=1 -std=c++11)
#include_directories(/home/ubuntu/userland/host_applications/linux/libs/bmc_host/include)
#include_directories(/home/ubuntu/userland/interface/vcos)
#include_directories(/home/ubuntu/userland)
#include_directories(/opt/vc/include/interface/vmcs_host)
#include_directories(/home/ubuntu/userland/interface/vchiq_arm)
include_directories(/home/ubuntu/userland/interface/vcos/pthreads)
include_directories(/home/ubuntu/userland/interface/vmcs_host/linux)
#include_directories(/home/ubuntu/userland/interface/mmal)
include_directories(/opt/vc/include/interface/mmal)
include_directories(/opt/vc/include/interface)
include_directories(/home/ubuntu/raspicam-0.1.3/src/private)
include_directories(/home/ubuntu/raspicam-0.1.3/src)
include_directories(
  ${catkin_INCLUDE_DIRS}
  ${Boost_INCLUDE_DIR}
  /opt/vc/include/
#  /opt/vc/include/interface/vcos/pthreads
#  /opt/vc/include/interface/vmcs_host/linux
)

## Declare a cpp executable
add_executable(
  rosberrypi_cam_node
  src/main.cpp
#  src/vc_vchi_gencmd.c
#  src/RaspiCamControl.cpp
#  src/RaspiCLI.cpp
#  src/vchiq_lib.c
)
target_link_libraries(rosberrypi_cam_node 
  /usr/local/lib/libopencv_ocl.so
  /usr/local/lib/libopencv_nonfree.so
  ${raspicam_LIBS}
  ${raspicam_CV_LIBS}
  ${catkin_LIBRARIES}
  ${OpenCV_LIBRARIES}
  ${Boost_LIBRARIES}
  libvcos.so
  raspicam
  bcm_host
	#/opt/vc/lib/libmmal_core.so 
	#/opt/vc/lib/libmmal_util.so 
#	/opt/vc/lib/libmmal_vc_client.so
#	/opt/vc/lib/libvcos.so 
#	/opt/vc/lib/libbcm_host.so 
)

install(TARGETS
  rosberrypi_cam_node
  ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
)
